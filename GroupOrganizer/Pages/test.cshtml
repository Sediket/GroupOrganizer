@page
@model GroupOrganizer.Pages.testModel
@{
    ViewData["Title"] = "test";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" type="text/css" href="~/css/groupOrganizer.css">
    <title>Group Organizer</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

</head>
<body>
    <input type="button" id="sendButton" value="Send to Server" />
    <label id="lblUserName"></label>
    <div id="login">
        <h2>Sign In</h2>
        <div class="username" data-validate="Please enter username">
            <input class="input100" type="text" name="username" placeholder="Enter Your Name" id="username">
            <span class="focus-input100"></span>
        </div>

        <div class="container-login100-form-btn">
            <button class="login100-form-btn" id="signIn">
                Sign in
            </button>
        </div>
    </div>
    <div id="main" style="display:none">

        <div class="topnav">
            <div class="topnavContainer">
                <div>
                    <label for="groups">Choose a Group:</label>

                    <select id="groups">
                    </select>
                </div>
            </div>

            <div class="addButton">
                <input type="button" value="Add a Group" id="addGroupBtn">
            </div>
        </div>


        <div class="content" id="content" style="display: none">
            <label id="jsonTest"></label>
            <div class="addItem">
                <input type="button" value="Add an Item" id="addItemBtn">
            </div>

            <div id="itemArea">

                

            </div>

        </div>
    </div>

    <div class="footer">
        <p>Footer</p>
    </div>

    <div class="invisBack" id="invisGroup"></div>
    <div class="invisForm" id="addGroupForm">
        <p>Enter new group:</p><input type="text" id="newGroupName" /><br />
        <p id="newGroupMessage"></p>
        <input type="button" id="loadGroupBtn" value="Submit" style="margin-top:5px;" />
    </div>


    <div class="invisBack" id="invisItem"></div>
    <div class="invisForm" id="addItemForm">
        <p>Enter new item:</p><input type="text" id="newItemName" /><br />
        <p id="newItemMessage"></p>
        <input type="button" id="loadItemBtn" value="Submit" style="margin-top:5px;" />
    </div>

    <div class="invisBack" id="invisText"></div>
    <div class="invisForm" id="addTextForm">
        <p>Enter new Text:</p><input type="text" id="newTextName" /><br />
        <p id="newTextMessage"></p>
        <input type="button" id="loadTextBtn" value="Submit" style="margin-top:5px;" />
    </div>


</body>
</html>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/Connection.js"></script>
    <script src="~/js/helpers.js">
    //all return groupOrganizer
    //function newGroupOgranizer()
    //function addGroup(groupOrganizer, groupName)
    //function  addItem(groupOrganizer, groupName, itemName, ownerName)


    //function addText(groupOrganizer, groupName, itemName, userName, newText)
    //add text only if locked first and:
    //modifyingUser = user
    //visibility = no
    //owner = user
    //locked = yes
    //or
    //modifyingUser = user
    //visibility = yes
    //locked = yes

    //function lockItem(groupOrganizer, groupName, itemName,userName) //lock by any user if unlocked
    //function unlockItem(groupOrganizer, groupName, itemName,userName) //modify only by modifying user
    //function makeVisible(groupOrganizer, groupName, itemName, userName) //modify only by owner
    //function makeVisible(groupOrganizer, groupName, itemName, userName) //modify only by owner
</script>
<script>


    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    connection.start().then(function () {
        //document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    function serverUpdate() {
        jsonString = JSON.stringify(GroupOrganizer);
        console.log("sending: " + jsonString);
        connection.invoke("SendMessage", document.getElementById("username").value, jsonString).catch(function (err) {
            return console.error(err.toString());
        });
    }

    connection.on("ReceiveMessage", function (user, jsonString) {
        //remove everything

        //remove dropdown items
        removeGroups();

        //remove items:
        removeItems();

        //clear data structure:
        emptyDataStructure();

        //rebuild everything
        jsonObject = JSON.parse(jsonString);
        
        rebuild(jsonObject);
    });



    document.getElementById("sendButton").addEventListener("click", function (event) {
        serverUpdate();
    });


    //event listener for signin button
    document.getElementById("signIn").addEventListener("click", function (event) {
        var username = document.getElementById("username").value;

        var loginDiv = document.getElementById("login");
        var mainDiv = document.getElementById("main");

        if (username == "") {
            alert("Please enter username.");
            event.preventDefault();
        } else {
            document.getElementById("lblUserName").innerHTML = "Welcome " + username;
            loginDiv.style.display = "none";
            mainDiv.style.display = "block";
        }
    });



    //add group event listner
    document.getElementById("loadGroupBtn").addEventListener("click", function (event) {
        if (checkGroupExistsDD("groups", document.getElementById("newGroupName").value)) {
            document.getElementById("newGroupMessage").style.color = "red";
            document.getElementById("newGroupMessage").innerHTML = "Value already exists, enter a new one";
        } else {
            //value doesn't exist add:
            //verify the group box is not empty
            if (!document.getElementById("newGroupName").value == "") {

                //add group to UI function
                addGroupToUI(document.getElementById("newGroupName").value);

                //hide add group text box
                document.getElementById("invisGroup").style.display = "none";
                document.getElementById("addGroupForm").style.display = "none";

                //send update to server
                //serverUpdate();


                event.preventDefault();
            } else {
                //please enter a value message
                document.getElementById("newGroupMessage").style.color = "red";
                document.getElementById("newGroupMessage").innerHTML = "Please enter a value";
            }
        }

        
    });

    //function remove all items:
    function removeItems() {
        var itemArea = document.getElementById("itemArea");
        var items = document.getElementById("itemArea").children;
        for (var i = items.length; i > 0; i--) {
            itemArea.removeChild(items[i - 1]);
        }
    }

    //remove groups in dropdown
    function removeGroups() {
        select = document.getElementById("groups");
        length = select.options.length;
        for (i = length - 1; i >= 0; i--) {
            select.options[i] = null;
        }
    }

    //empty the data structure:
    function emptyDataStructure() {
        GroupOrganizer = [];
    }

    //function to add group to UI
    function addGroupToUI(groupName) {
        //unhide item area:
        var contentDiv = document.getElementById("content");
        if (contentDiv.style.display = "none") {
            contentDiv.style.display = "block";
        }

        var newGroup = groupName;
        var option = document.createElement("option");
        option.textContent = newGroup;
        //add to dropdown
        document.getElementById("groups").appendChild(option);
        document.getElementById("groups").value = option.value;

        //remove old items:
        removeItems();


        //add to datastructure
        GroupOrganizer = addGroup(GroupOrganizer, option.value);
        var jsonString2 = JSON.stringify(GroupOrganizer);
        
    }

    //groupName, itemName, owner, modUser, locked
    //function to add item to UI
    function addItemToUI(currentGroupName, newItem, owner, modifyingUser, locked, change) {
        //new divItem and title
        
        var divItem = document.createElement("div"); //new divItem
        var divItemTitle = document.createElement("div"); //new divTitle for new item
        divItem.className = "item col-md-4";
        divItemTitle.className = "itemTitle";
        divItemTitle.innerHTML = "<span>" + newItem + "</span>";
        divItem.appendChild(divItemTitle);

        //user div for who locks the item
        var divUserLocked = document.createElement("div"); //new divItem for the current locked user
        divUserLocked.style.color = "red";
        divUserLocked.style.textAlign = "center";
        divItem.prepend(divUserLocked);

        // creating the visibility checkbox
        var visibleLbl = document.createElement("label");
        visibleLbl.textContent = "Visible ";
        var visibleBtn = document.createElement("input");
        visibleBtn.type = "checkbox";

        // adding event listener for visibility checkbox so the user can choose whether the item is visible for others or not.
        visibleBtn.addEventListener("change", function () {
            if (this.checked) {
                owner = getOwner(GroupOrganizer, currentGroupName, divItemTitle);
                if (owner == user) {
                    //owner
                    divItem.style.display = "block";
                } else {
                    //not owner
                    divItem.style.display = "none";
                }
            } else {
                //display for evryone
                divItem.style.display = "block";
            }
        });
        divItem.appendChild(visibleLbl);
        divItem.appendChild(visibleBtn);

        // creating the Add Text button for each item
        var addTextBtn = document.createElement("button");
        addTextBtn.innerHTML = "Add Text";
        addTextBtn.style.cssFloat = "right";
        addTextBtn.style.display = "none";

        //add in lock item button
        var lockBtn = document.createElement("button");
        lockBtn.textContent = "Lock";
        lockBtn.style.cssFloat = "right";
        lockBtn.style.marginTop = "-3px";
        lockBtn.style.marginRight = "-3px";


        //check if already locked:
        if (locked == "yes") {
            console.log("locked: " + locked);
            //locked
            divUserLocked.innerHTML = "locked by " +  modifyingUser;
            lockBtn.textContent = "Unlock";
            GroupOrganizer = lockItem(GroupOrganizer, currentGroupName, newItem, document.getElementById("username").value);
            console.log(GroupOrganizer);

        } else {
            //unlocked
            lockBtn.textContent = "Lock";
            divUserLocked.innerHTML = "";
            addTextBtn.style.display = "none";
            GroupOrganizer = unlockItem(GroupOrganizer, currentGroupName, newItem, document.getElementById("username").value);
        }

        //event listner for locking the item
        lockBtn.addEventListener("click", function () {

            

            //call lockUI

            if (divUserLocked.innerHTML == "") {
                //not locked, lock now
                divUserLocked.innerHTML = "locked by " + document.getElementById("username").value;
                lockBtn.textContent = "Unlock";

                if (change == 0) {
                    //update data structure
                    GroupOrganizer = unlockItem(GroupOrganizer, currentGroupName, newItem, document.getElementById("username").value);
                }
                
                addTextBtn.style.display = "block";
                //var jsonString2 = JSON.stringify(GroupOrganizer);
                
            } else {
                //unlock:
                lockBtn.textContent = "Lock";
                divUserLocked.innerHTML = "";
                addTextBtn.style.display = "none";

                if (change == 0) {
                    //update data structure
                    GroupOrganizer = lockItem(GroupOrganizer, currentGroupName, newItem, document.getElementById("username").value);
                }
                //var jsonString2 = JSON.stringify(GroupOrganizer);
                
            }

        });


        divItemTitle.appendChild(lockBtn);



        // Adding event listener for Add Text button so the user can add text to the item
        addTextBtn.addEventListener("click", function (event) {
            //addTextBtn.onclick = function () {

            document.getElementById("newTextMessage").innerHTML = ""; //empty message text under the textfield
            document.getElementById("newTextName").value = ""; //empty add group text field
            document.getElementById("newTextName").name = newItem; //for referencing who called it.

            //show add text, text box:
            document.getElementById("invisText").style.display = "block";
            document.getElementById("addTextForm").style.display = "block";
            //event listener for the shadded background
            document.getElementById("invisText").addEventListener("click", function (event) {
                document.getElementById("invisText").style.display = "none";
                document.getElementById("addTextForm").style.display = "none";
            });
        });
        //event listener for the submit button for adding text



        document.getElementById("loadTextBtn").addEventListener("click", function (event) {
            //hide the form
            document.getElementById("invisText").style.display = "none";
            document.getElementById("addTextForm").style.display = "none";

            var itemText = document.createElement("div");
            itemText.textContent = document.getElementById("newTextName").value;

            //check its the right calling item
            if (newItem == document.getElementById("newTextName").name) {
                //add to the item UI
                divItem.appendChild(itemText);

                //add to datastructure:
                var e = document.getElementById("groups")
                var currentGroupName = e.options[e.selectedIndex].text;
                console.log("change" + change);
                if (change == 0) {
                    GroupOrganizer = addText(GroupOrganizer, currentGroupName, newItem, itemText.textContent);
                }
                
            }


            //print it out:
            //var jsonString2 = JSON.stringify(GroupOrganizer);
            
        });

        //divItem.appendChild(textInput);
        divItem.appendChild(addTextBtn);

        //add to the itemArea
        document.getElementById("itemArea").appendChild(divItem);

        console.log("change add item:" + change);
        if (change == 0) {
            GroupOrganizer = addItem(GroupOrganizer, currentGroupName, newItem, owner);
        }
        //print it out:
        //var jsonString2 = JSON.stringify(GroupOrganizer);
        
        //serverUpdate();
    }

    //event listener for submit button for loadItem
    document.getElementById("loadItemBtn").addEventListener("click", function (event) {
        //check that the text field is not empty
        if (!document.getElementById("newItemName").value == "") {
            
            //check that the item doesn't exist
            if (checkItemExists(document.getElementById("newItemName").value)) {
                //already exists:
                document.getElementById("newItemMessage").style.color = "red";
                document.getElementById("newItemMessage").innerHTML = "Already Exists";
            } else {
                //doesn't exists:
                //gather varibles
                var e = document.getElementById("groups")
                var currentGroupName = e.options[e.selectedIndex].text; //current selected item in groups dropdown
                var owner = document.getElementById("username").value; //username from text field
                var newItem = document.getElementById("newItemName").value; //itemname from text field

                //add to UI
                modifyingUser = document.getElementById("username").value;
                locked = "no";
                change = 0; //add to ui
                
                addItemToUI(currentGroupName, newItem, owner, modifyingUser, locked,change);

                            
                //hide the additem form and background
                document.getElementById("invisItem").style.display = "none";
                document.getElementById("addItemForm").style.display = "none";
            } //end of if check exists


        } else {
            //text box is empty:
            document.getElementById("newItemMessage").style.color = "red";
            document.getElementById("newItemMessage").innerHTML = "Please enter a value";
        }
    });


    //add text to UI
    function addTextToUI(groupName, itemName, texts, change) {
        var e = document.getElementById("groups")
        var currentGroupName = e.options[e.selectedIndex].text;
        //make sure right group
        if (currentGroupName == groupName) {
            //find the item:
            var items = document.getElementById("itemArea").children;
            for (var i = 0; i < items.length; i++) {
                if (typeof (items[i].children[1].children[0]) != "undefined") {
                    var divTitle = items[i].children[1].children[0].innerHTML;
                    if (divTitle == itemName) {
                        //add the texts
                        textsLen = texts.length
                        for (k = 0; k < textsLen; k++) {
                            var itemText = document.createElement("div");
                            itemText.textContent = texts[k];
                            items[i].appendChild(itemText);
                            //add to datastructure:
                            
                            if (change == 0) {
                                GroupOrganizer = addText(GroupOrganizer, currentGroupName, itemName, texts[k]);
                            }
                            
                        }
                    }
                }
            }
        }
        
    }



    document.getElementById("invisItem").addEventListener("click", function (event) {
        document.getElementById("invisItem").style.display = "none";
        document.getElementById("addItemForm").style.display = "none";
    });

    document.getElementById("addItemBtn").addEventListener("click", function (event) {
        var group = document.getElementById("groups");

        if (group.value == "") {
            alert("Please select or add group.");
            event.preventDefault();
        } else {
            document.getElementById("newItemMessage").innerHTML = ""; //empty message text under the textfield
            document.getElementById("newItemName").value = ""; //empty add item text field
            document.getElementById("invisItem").style.display = "block";
            document.getElementById("addItemForm").style.display = "block";
        }
    });



    //event listener for the shadded background
    document.getElementById("invisGroup").addEventListener("click", function (event) {
        document.getElementById("invisGroup").style.display = "none";
        document.getElementById("addGroupForm").style.display = "none";
    });


    //event listner for the add group button
    document.getElementById("addGroupBtn").addEventListener("click", function (event) {
        document.getElementById("newGroupMessage").innerHTML = ""; //empty message text under the textfield
        document.getElementById("newGroupName").value = ""; //empty add group text field

        //show add group text box:
        document.getElementById("invisGroup").style.display = "block"; 
        document.getElementById("addGroupForm").style.display = "block";
    });






    //change group event listner
    document.getElementById("groups").addEventListener("change", function () {
        //get new selected group:
        var e = document.getElementById("groups")
        var currentGroupName = e.options[e.selectedIndex].text;

        

        //change selected group
        
        
        GroupOrganizer = selectGroup(GroupOrganizer, currentGroupName)

        jsonString = JSON.stringify(GroupOrganizer);
        

        //clear items
        var itemArea = document.getElementById("itemArea");
        var items = document.getElementById("itemArea").children;
        for (var i = items.length; i > 0; i--) {
            itemArea.removeChild(items[i - 1]);
        }

        jsonObject = JSON.parse(jsonString);

        

        //populate the selected group:
        for (var i = 0; i < GroupOrganizer.length; i++) {
            
            groupName = GroupOrganizer[i].groupName;
            if (GroupOrganizer[i].selected == true) {
                Itemlength = GroupOrganizer[i].items.length;
                
                for (var j = 0; j < Itemlength; j++) {
                    

                    itemName = (GroupOrganizer[i].items[j].itemName);

                    vis = (GroupOrganizer[i].items[j].visible);
                    modUser = (GroupOrganizer[i].items[j].modifyingUserName);
                    owner = (GroupOrganizer[i].items[j].ownerName);
                    locked = (GroupOrganizer[i].items[j].locked);
                    texts = (GroupOrganizer[i].items[j].texts);

                    
                    change = 1;
                    //add items:
                    addItemToUI(groupName, itemName, owner, modUser, locked, change);
                    //add texts
                    
                    addTextToUI(groupName, itemName, texts, change);
                                
                }
            }
        }
        
    });

    sampleJSON = '[{ "groupName": "Sports", "selected": true, "items": [{ "itemName": "Soccer", "ownerName": "Sediket", "modifyingUserName": "Sediket", "visible": "no", "locked": "yes", "texts": ["ball game", "big field"] }, { "itemName": "Baseball", "ownerName": "Sediket", "modifyingUserName": "Sediket", "visible": "no", "locked": "no", "texts": ["hit ball with stick", "catch ball with hands"] }, { "itemName": "basketball", "ownerName": "Sediket", "modifyingUserName": "Sediket", "visible": "no", "locked": "no", "texts": ["ball game with hands", "shoot ball in basket", "have fun"] }] },{"groupName":"asdf","selected":false,"items":[]}]';
    temp =       '[{ "groupName": "Sports", "selected": true, "items": [{ "itemName": "Soccer", "ownerName":"Sediket","modifyingUserName":"","visible":"no","locked":"no","texts":["ball game","big field"]},{"itemName":"Baseball","ownerName":"Sediket","modifyingUserName":"","visible":"no","locked":"no","texts":["hit ball with stick","catch ball with hands"]},{"itemName":"basketball","ownerName":"Sediket","modifyingUserName":"","visible":"no","locked":"no","texts":["ball game with hands","shoot ball in basket","have fun"]},{"itemName":"asdf","ownerName":"Bradley","modifyingUserName":"","visible":"no","locked":"no","texts":[]}]},{"groupName":"asdf","selected":false,"items":[]}]'
    jsonObject = JSON.parse(sampleJSON);

    rebuild(jsonObject);

    //rebuild
    function rebuild(jsonObject) {
        
        for (var i = 0; i < jsonObject.length; i++) {
            //add to groups ui
            
            groupName = jsonObject[i].groupName;
            addGroupToUI(groupName);
        }
        //populate the selected group:
        for (var i = 0; i < jsonObject.length; i++) {
            
            groupName = jsonObject[i].groupName;

            if (jsonObject[i].selected == true) {
                makeGroupSelectedUI(jsonObject[i].groupName);
                for (var j = 0; j < jsonObject[i].items.length; j++) {
                    itemName = (jsonObject[i].items[j].itemName);
                    vis = (jsonObject[i].items[j].visible);
                    modUser = (jsonObject[i].items[j].modifyingUserName);
                    owner = (jsonObject[i].items[j].ownerName);
                    locked = (jsonObject[i].items[j].locked);
                    texts = (jsonObject[i].items[j].texts);

                    change = 0;
                    //add items:

                    addItemToUI(groupName, itemName, owner, modUser, locked, change);
                    //add texts
                    addTextToUI(groupName, itemName, texts, change);
                }
            } else {
                //add to datastructure
                for (var j = 0; j < jsonObject[i].items.length; j++) {
                    itemName = (jsonObject[i].items[j].itemName);
                    vis = (jsonObject[i].items[j].visible);
                    modUser = (jsonObject[i].items[j].modifyingUserName);
                    owner = (jsonObject[i].items[j].ownerName);
                    locked = (jsonObject[i].items[j].locked);
                    texts = (jsonObject[i].items[j].texts);


                    GroupOrganizer = addItem(GroupOrganizer, groupName, itemName, owner);

                    GroupOrganizer = addText(GroupOrganizer, groupName, itemName, texts);

                }


            }
        }
    }

    function makeGroupSelectedUI(groupToBeSelected) {
        //make the selected group the one shown in the dropdown
        select = document.getElementById("groups");
        length = select.options.length;
        for (i = length - 1; i >= 0; i--) {
            if (groupToBeSelected == select.options[i].textContent) {
                select.options[i].selected = true;
            }
        }
    }


    //var groupOrganizer = [{
    //    groupName: "games",
    //    items: [{
    //        itemName: "diablo",
    //        texts: ["rpg","fun with friends","coop"]
    //    }, {
    //        itemName: "Minecraft",
    //        userName: "Brad",
    //        texts: ["coop","survival"],
    //        }]
    //}, {
    //    groupName: "movies",
    //    items: [{
    //        itemName: "star wars",
    //        texts: ["sci-fy","action"],
    //    }]
    //}]

    //newGroup = {
    //    groupName: "sports",
    //    items: []
    //}

    //newItem = {
    //    itemName: "soccer",
    //    texts:["popular in europe","150 yard field"]
    //}


    //newGroup.items.push(newItem);

    //groupOrganizer.push(newGroup);

    


    //document.writeln(groupOrganizer[0].groupName);
    //document.writeln(groupOrganizer[0].items[0].itemName);
    //document.writeln(groupOrganizer[0].items[0].texts[2]);

    //var jsonString = JSON.stringify(groupOrganizer);


    //var unJSON = JSON.parse(jsonString)


    //document.writeln(jsonString);
    //document.writeln();
    //document.writeln(unJSON.length);

</script>



